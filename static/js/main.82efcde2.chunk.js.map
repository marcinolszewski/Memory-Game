{"version":3,"sources":["components/Card.module.scss","components/Gameover.module.scss","components/Board.module.scss","components/Scoreboard.module.scss","assets/cat.png","assets/dino.png","assets/giraffe.png","assets/goat.jpg","assets/panda.jpg","assets/snake.jpg","assets/rhino.png","assets/tiger.jpg","assets/sounds/cardReveal.wav","assets/sounds/foundPair.wav","assets/sounds/gameWin.wav","assets/sounds/bgMusic1.mp3","components/Card.js","components/Scoreboard.js","components/Gameover.js","componentAssets/Images.js","componentAssets/Sounds.js","components/Board.js","App.js","index.js"],"names":["module","exports","Card","imgSrc","id","isVisible","handleOnClick","className","styles","flipCard","onClick","flipCard__inner","rotate","flipCard__front","flipCard__back","src","flipCard__img","alt","Scoreboard","score","wrapper","Gameover","handleClick","hidden","header","button","images","cat","dino","giraffe","goat","panda","snake","rhino","tiger","cardReveal","Howl","cardRevealSound","foundPair","foundPairSound","gameWin","gameWinSound","menuMusic","menuMusicSound","volume","loop","Board","state","board","generateBoard","collectedItems","tempItems","currCheckedIds","pairs","gameLimit","isGameoverVisible","revealCard","el","stopPropagation","currentTarget","play","forEach","card","length","push","pairId","setTimeout","setState","fade","finishGame","toggleGameOverBoard","timeout","readScoreFromCookie","saveScoreToCookie","document","cookie","resetGame","uuidv4","sort","Math","random","this","boardWrapper","map","key","Component","App","ReactDOM","render","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,gBAAkB,8BAA8B,gBAAkB,8BAA8B,eAAiB,6BAA6B,cAAgB,4BAA4B,gBAAkB,8BAA8B,OAAS,uB,gBCAvSD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,yBAAyB,OAAS,yBAAyB,OAAS,2B,iBCAnID,EAAOC,QAAU,CAAC,aAAe,4BAA4B,MAAQ,uB,qBCArED,EAAOC,QAAU,CAAC,QAAU,8B,gBCD5BD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,uLCsB5BC,EAnBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACrC,OACE,yBAAKC,UAAWC,IAAOC,SAAUL,GAAIA,EAAIM,QAASJ,GAChD,yBACEC,UACEF,EAAS,UACFG,IAAOG,gBADL,YACwBH,IAAOI,QAD/B,UAEFJ,IAAOG,kBAGhB,yBAAKJ,UAAWC,IAAOK,kBACvB,yBAAKN,UAAWC,IAAOM,gBACrB,yBAAKC,IAAKZ,EAAQI,UAAWC,IAAOQ,cAAeC,IAAI,mB,iBCHlDC,MATf,YAAgC,IAAVC,EAAS,EAATA,MACpB,OACE,yBAAKZ,UAAWC,IAAOY,SACrB,kEACA,8BAAOD,K,gBCWEE,EAfE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAajB,EAAgB,EAAhBA,UAC/B,OACE,yBACEE,UACEF,EAAYG,IAAOY,QAAV,UAAuBZ,IAAOY,QAA9B,YAAyCZ,IAAOe,SAG3D,uBAAGhB,UAAWC,IAAOgB,QAArB,mCACA,4BAAQjB,UAAWC,IAAOiB,OAAQf,QAASY,GAA3C,wB,gKCASI,EAFA,CAAEC,QAAKC,SAAMC,YAASC,SAAMC,UAAOC,UAAOC,UAAOC,W,2ECHnDC,EAAa,IAAIC,OAAK,CACjCrB,IAAK,CAACsB,OAGKC,EAAY,IAAIF,OAAK,CAChCrB,IAAK,CAACwB,OAGKC,EAAU,IAAIJ,OAAK,CAC9BrB,IAAK,CAAC0B,OAEKC,EAAY,IAAIN,OAAK,CAChCrB,IAAK,CAAC4B,KACNC,OAAQ,GACRC,MAAM,ICoNOC,G,2MArNbC,MAAQ,CACNC,MAAO,EAAKC,gBACZC,eAAgB,GAChBC,UAAW,GACXC,eAAgB,GAChBC,MAAO,EACPC,UAAW,EACXnC,MAAO,EACPoC,mBAAmB,G,EA0GrBC,WAAa,SAACC,GACZA,EAAGC,kBADgB,IAEXtD,EAAOqD,EAAGE,cAAVvD,GAFW,EAGiC,EAAK2C,MAAjDC,EAHW,EAGXA,MAAOG,EAHI,EAGJA,UAAWC,EAHP,EAGOA,eAAgBC,EAHvB,EAGuBA,MAE1ClB,EAAWyB,OAEXZ,EAAMa,SAAQ,SAACC,GACRA,EAAKzD,WAAayD,EAAK1D,KAAOA,IAC3B+C,EAAUY,OAAS,IACvBZ,EAAUY,OAASX,EAAeW,OAAS,GAC7CX,EAAeY,KAAK5D,GACpB+C,EAAUa,KAAKF,EAAKG,QACpBH,EAAKzD,WAAayD,EAAKzD,cAIvB8C,EAAU,KAAOA,EAAU,IAA2B,IAArBA,EAAUY,QAC7Cf,EAAMa,SAAQ,SAACC,GACTA,EAAK1D,KAAOgD,EAAe,IAAMU,EAAK1D,KAAOgD,EAAe,IAC9Dc,YAAW,WACTJ,EAAKzD,WAAayD,EAAKzD,UACvB,EAAK8D,SAAS,CAAEnB,YACf,QAKLG,EAAU,KAAOA,EAAU,KAC7Bb,EAAUsB,OACV,EAAKO,SAAS,CAAEd,MAAOA,EAAQ,KAGjC,EAAKc,SAAS,CAAEf,iBAAgBD,YAAWH,UAAS,WAAO,IAAD,EAC3B,EAAKD,MADsB,EAChDM,QADgD,EACzCC,YAEbZ,EAAU0B,KAAK,EAAG,GAAK,KACvB5B,EAAQoB,OACR,EAAKS,aACL,EAAKC,oBAAoB,U,EAK/BA,oBAAsB,SAACC,GACrBL,YAAW,WACT,EAAKC,SAAS,CAAEZ,mBAAoB,EAAKR,MAAMQ,sBAC9CgB,I,EAGLC,oBAAsB,a,EAItBC,kBAAoB,SAACtD,GAAD,OAAYuD,SAASC,OAAT,iBAA4BxD,EAA5B,M,EAEhCkD,WAAa,WACX,EAAKF,SACH,CACEhD,MAAO,EAAK4B,MAAM5B,MAAQ,EAC1BkC,MAAO,IAET,kBAAM,EAAKoB,kBAAkB,EAAK1B,MAAM5B,W,EAI5CyD,UAAY,WACVlC,EAAU0B,KAAK,GAAK,EAAG,KACvB,EAAKD,SAAS,CAAEnB,MAAO,EAAKC,gBAAiBM,mBAAmB,K,mFAzLhEb,EAAUkB,S,sCAkHV,MAnGsB,CACpB,CACEzD,OAAQuB,EAAOC,IACfvB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOE,KACfxB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOG,QACfzB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOI,KACf1B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOK,MACf3B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOO,MACf7B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOM,MACf5B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOQ,MACf9B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOC,IACfvB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOE,KACfxB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOG,QACfzB,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOI,KACf1B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOK,MACf3B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOO,MACf7B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOM,MACf5B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,GAEb,CACEF,OAAQuB,EAAOQ,MACf9B,GAAIyE,cACJZ,OAAQ,EACR5D,WAAW,IAEbyE,MAAK,kBAAMC,KAAKC,SAAW,Q,+BA4ErB,IAAD,SACkBC,KAAKlC,MAAtBC,EADD,EACCA,MAAO7B,EADR,EACQA,MACf,OACE,yBAAKZ,UAAWC,IAAO0E,cACrB,kBAAC,EAAD,CACE7E,UAAW4E,KAAKlC,MAAMQ,kBACtBjC,YAAa2D,KAAKL,YAEpB,kBAAC,EAAD,CAAYzD,MAAOA,IACnB,yBAAKZ,UAAWC,IAAOwC,OACpBA,EAAMmC,KAAI,SAAC1B,GACV,OACE,kBAAC,EAAD,CACE2B,IAAK3B,EAAGrD,GACRA,GAAIqD,EAAGrD,GACP6D,OAAQR,EAAGQ,OACX5D,UAAWoD,EAAGpD,UACdF,OAAQsD,EAAGtD,OACXG,cAAe,EAAKkD,sB,GAhNhB6B,a,MCFLC,OARf,WACE,OACE,yBAAK/E,UAAU,OACb,kBAAC,GAAD,CAAOiB,OAAO,kBCHpB+D,IAASC,OAAO,kBAAC,GAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.82efcde2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipCard\":\"Card_flipCard__31HqA\",\"flipCard__inner\":\"Card_flipCard__inner__3l-mr\",\"flipCard__front\":\"Card_flipCard__front__3F-VX\",\"flipCard__back\":\"Card_flipCard__back__3YNOW\",\"flipCard__img\":\"Card_flipCard__img__jU-xM\",\"flipCard__cover\":\"Card_flipCard__cover__FaOPX\",\"rotate\":\"Card_rotate__18y_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Gameover_wrapper__2Q2bW\",\"header\":\"Gameover_header__1kUfx\",\"button\":\"Gameover_button__pZ62b\",\"hidden\":\"Gameover_hidden__1iCg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardWrapper\":\"Board_boardWrapper__S-9SJ\",\"board\":\"Board_board__2ELh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Scoreboard_wrapper__1xOtA\"};","module.exports = __webpack_public_path__ + \"static/media/cat.033161cb.png\";","module.exports = __webpack_public_path__ + \"static/media/dino.ca60c323.png\";","module.exports = __webpack_public_path__ + \"static/media/giraffe.645f43d2.png\";","module.exports = __webpack_public_path__ + \"static/media/goat.04a73f73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/panda.14c98419.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snake.4aeccc1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rhino.f47c52b9.png\";","module.exports = __webpack_public_path__ + \"static/media/tiger.1836bdfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cardReveal.a27a6345.wav\";","module.exports = __webpack_public_path__ + \"static/media/foundPair.a75c2497.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameWin.7740f435.wav\";","module.exports = __webpack_public_path__ + \"static/media/bgMusic1.8373bea7.mp3\";","import React from 'react';\nimport styles from './Card.module.scss';\n\nconst Card = ({ imgSrc, id, isVisible, handleOnClick }) => {\n  return (\n    <div className={styles.flipCard} id={id} onClick={handleOnClick}>\n      <div\n        className={\n          isVisible\n            ? `${styles.flipCard__inner} ${styles.rotate}`\n            : `${styles.flipCard__inner}`\n        }\n      >\n        <div className={styles.flipCard__front}></div>\n        <div className={styles.flipCard__back}>\n          <img src={imgSrc} className={styles.flipCard__img} alt=\"Card Front\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport styles from './Scoreboard.module.scss';\n\nfunction Scoreboard({ score }) {\n  return (\n    <div className={styles.wrapper}>\n      <span>Ilość wygranych gier: </span>\n      <span>{score}</span>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React from 'react';\nimport styles from './Gameover.module.scss';\n\nconst Gameover = ({ handleClick, isVisible }) => {\n  return (\n    <div\n      className={\n        isVisible ? styles.wrapper : `${styles.wrapper} ${styles.hidden}`\n      }\n    >\n      <p className={styles.header}>Gratulacje, wygrałaś!</p>\n      <button className={styles.button} onClick={handleClick}>\n        Rozpocznij od nowa\n      </button>\n    </div>\n  );\n};\n\nexport default Gameover;\n","import cat from '../assets/cat.png';\nimport dino from '../assets/dino.png';\nimport giraffe from '../assets/giraffe.png';\nimport goat from '../assets/goat.jpg';\nimport panda from '../assets/panda.jpg';\nimport snake from '../assets/snake.jpg';\nimport rhino from '../assets/rhino.png';\nimport tiger from '../assets/tiger.jpg';\n\nconst images = { cat, dino, giraffe, goat, panda, snake, rhino, tiger };\n\nexport default images;\n","import { Howl, Howler } from 'howler';\nimport cardRevealSound from '../assets/sounds/cardReveal.wav';\nimport foundPairSound from '../assets/sounds/foundPair.wav';\nimport gameWinSound from '../assets/sounds/gameWin.wav';\nimport menuMusicSound from '../assets/sounds/bgMusic1.mp3';\n\nexport const cardReveal = new Howl({\n  src: [cardRevealSound],\n});\n\nexport const foundPair = new Howl({\n  src: [foundPairSound],\n});\n\nexport const gameWin = new Howl({\n  src: [gameWinSound],\n});\nexport const menuMusic = new Howl({\n  src: [menuMusicSound],\n  volume: 0.6,\n  loop: true,\n});\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport Scoreboard from './Scoreboard';\nimport Gameover from './Gameover';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './Board.module.scss';\nimport images from '../componentAssets/Images';\nimport {\n  cardReveal,\n  foundPair,\n  gameWin,\n  menuMusic,\n} from '../componentAssets/Sounds';\n\nclass Board extends Component {\n  componentDidMount() {\n    menuMusic.play();\n  }\n\n  state = {\n    board: this.generateBoard(),\n    collectedItems: [],\n    tempItems: [],\n    currCheckedIds: [],\n    pairs: 0,\n    gameLimit: 8,\n    score: 0,\n    isGameoverVisible: false,\n  };\n\n  generateBoard() {\n    const shuffledArray = [\n      {\n        imgSrc: images.cat,\n        id: uuidv4(),\n        pairId: 1,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.dino,\n        id: uuidv4(),\n        pairId: 2,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.giraffe,\n        id: uuidv4(),\n        pairId: 3,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.goat,\n        id: uuidv4(),\n        pairId: 4,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.panda,\n        id: uuidv4(),\n        pairId: 5,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.rhino,\n        id: uuidv4(),\n        pairId: 6,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.snake,\n        id: uuidv4(),\n        pairId: 7,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.tiger,\n        id: uuidv4(),\n        pairId: 8,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.cat,\n        id: uuidv4(),\n        pairId: 1,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.dino,\n        id: uuidv4(),\n        pairId: 2,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.giraffe,\n        id: uuidv4(),\n        pairId: 3,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.goat,\n        id: uuidv4(),\n        pairId: 4,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.panda,\n        id: uuidv4(),\n        pairId: 5,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.rhino,\n        id: uuidv4(),\n        pairId: 6,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.snake,\n        id: uuidv4(),\n        pairId: 7,\n        isVisible: false,\n      },\n      {\n        imgSrc: images.tiger,\n        id: uuidv4(),\n        pairId: 8,\n        isVisible: false,\n      },\n    ].sort(() => Math.random() - 0.5);\n\n    return shuffledArray;\n  }\n\n  revealCard = (el) => {\n    el.stopPropagation();\n    const { id } = el.currentTarget;\n    const { board, tempItems, currCheckedIds, pairs } = this.state;\n\n    cardReveal.play();\n\n    board.forEach((card) => {\n      if (!card.isVisible && card.id === id) {\n        if (!(tempItems.length < 2))\n          tempItems.length = currCheckedIds.length = 0;\n        currCheckedIds.push(id);\n        tempItems.push(card.pairId);\n        card.isVisible = !card.isVisible;\n      }\n    });\n\n    if (tempItems[0] !== tempItems[1] && tempItems.length !== 1) {\n      board.forEach((card) => {\n        if (card.id === currCheckedIds[0] || card.id === currCheckedIds[1]) {\n          setTimeout(() => {\n            card.isVisible = !card.isVisible;\n            this.setState({ board });\n          }, 700);\n        }\n      });\n    }\n\n    if (tempItems[0] === tempItems[1]) {\n      foundPair.play();\n      this.setState({ pairs: pairs + 1 });\n    }\n\n    this.setState({ currCheckedIds, tempItems, board }, () => {\n      const { pairs, gameLimit } = this.state;\n      if (pairs === gameLimit) {\n        menuMusic.fade(1, 0.2, 100);\n        gameWin.play();\n        this.finishGame();\n        this.toggleGameOverBoard(1000);\n      }\n    });\n  };\n\n  toggleGameOverBoard = (timeout) => {\n    setTimeout(() => {\n      this.setState({ isGameoverVisible: !this.state.isGameoverVisible });\n    }, timeout);\n  };\n\n  readScoreFromCookie = () => {\n    // TODO\n  };\n\n  saveScoreToCookie = (score) => (document.cookie = `\"score=${score}\"`);\n\n  finishGame = () => {\n    this.setState(\n      {\n        score: this.state.score + 1,\n        pairs: 0,\n      },\n      () => this.saveScoreToCookie(this.state.score)\n    );\n  };\n\n  resetGame = () => {\n    menuMusic.fade(0.2, 1, 100);\n    this.setState({ board: this.generateBoard(), isGameoverVisible: false });\n  };\n\n  render() {\n    const { board, score } = this.state;\n    return (\n      <div className={styles.boardWrapper}>\n        <Gameover\n          isVisible={this.state.isGameoverVisible}\n          handleClick={this.resetGame}\n        />\n        <Scoreboard score={score} />\n        <div className={styles.board}>\n          {board.map((el) => {\n            return (\n              <Card\n                key={el.id}\n                id={el.id}\n                pairId={el.pairId}\n                isVisible={el.isVisible}\n                imgSrc={el.imgSrc}\n                handleOnClick={this.revealCard}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport Board from './components/Board';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board header=\"Memory game\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}